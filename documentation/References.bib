book{Grotker2002,
address = {Boston},
author = {Gr{\"{o}}tker, Thorsten and Liao, Stan and Grant, Martin and Swan, Stuart},
doi = {10.1007/b116588},
file = {:home/kostis/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Cossio et al. - 2012 - System Design with SystemC.pdf:pdf},
isbn = {1-4020-7072-1},
mendeley-groups = {Thesis},
publisher = {Kluwer Academic Publishers},
title = {{System Design with SystemC}},
url = {http://link.springer.com/10.1007/b116588},
year = {2002}
}

@standard{OpenSystemCInitiative2012,
abstract = {SystemCÂ® is defined in this standard. SystemC is an ANSI standard C++ class library for system and hardware design for use by designers and architects who need to address complex systems that are a hybrid between hardware and software. This standard provides a precise and complete definition of the SystemC class library so that a SystemC implementation can be developed with reference to this standard alone. The primary audiences for this standard are the implementors of the SystemC class library, the implementors of tools supporting the class library, and the users of the class library.},
author = {{Open SystemC Initiative}},
doi = {10.1109/IEEESTD.2012.6134619},
file = {:home/kostis/bBibliography/SystemC/IEEE{\_}std{\_}1666-2011.pdf:pdf},
institution = {IEEE},
isbn = {9780738168012},
mendeley-groups = {SystemC},
title = {{1666-2011 - IEEE Standard for Standard SystemC Language Reference Manual}},
url = {http://ieeexplore.ieee.org/servlet/opac?punumber=6134617},
year = {2012}
}


@standard{OpenSystemCInitiative2009,
abstract = {This document is the Reference Manual for the OSCI Transaction Level Modeling standard, version 2.0. This version of the standard supersedes versions 2.0-draft-1 and 2.0-draft-2, and is not generally compatible with either. This version of the standard includes the core interfaces from TLM-1.},
author = {{Open SystemC Initiative}},
file = {:home/kostis/xDocuments/TLM{\_}2{\_}0{\_}LRM.pdf:pdf},
institution = {OSCI},
mendeley-groups = {SystemC},
pages = {194},
title = {{OSCI TLM-2.0 language reference manual}},
url = {http://www.accellera.org/images/downloads/standards/systemc/TLM_2_0_LRM.pdf},
year = {2009}
}


@inproceedings{Moy,
address = {New Jersey},
author = {Moy, Matthieu},
booktitle = {Design, Automation {\&} Test in Europe Conference {\&} Exhibition (DATE), 2013},
doi = {10.7873/DATE.2013.017},
file = {:home/kostis/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Moy - Unknown - Parallel Programming with SystemC for Loosely Timed Models A Non-Intrusive Approach.pdf:pdf},
isbn = {9781467350716},
mendeley-groups = {SystemC},
pages = {9--14},
publisher = {IEEE Conference Publications},
title = {{Parallel Programming with SystemC for Loosely Timed Models: A Non-Intrusive Approach}},
url = {http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6513463},
year = {2013}
}

@article{Chen2012,
author = {Chen, Weiwei and Han, Xu and Chang, Che-wei and Doemer, R.},
doi = {10.1109/MDT.2012.2226015},
file = {:home/kostis/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Chen et al. - 2012 - Advances in Parallel Discrete Event Simulation for Electronic System-Level Design.pdf:pdf},
issn = {0740-7475},
journal = {IEEE Design {\&} Test of Computers},
mendeley-groups = {SystemC},
month = {feb},
number = {October 2012},
pages = {1--1},
title = {{Advances in Parallel Discrete Event Simulation for Electronic System-Level Design}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6338368},
volume = {30},
year = {2012}
}

@article{Anane2015,
author = {Anane, Amine and Aboulhamid, El Mostapha},
doi = {10.1007/s10766-013-0303-4},
file = {:home/kostis/bBibliography/SystemC/A{\_}Transaction-Based{\_}Environment{\_}for{\_}System{\_}Modeling{\_}and{\_}Parallel{\_}Simulation.pdf:pdf},
issn = {0885-7458},
journal = {International Journal of Parallel Programming},
keywords = {Multi-core,Parallel simulation,SOC Design,Transactions},
mendeley-groups = {SystemC},
month = {feb},
number = {1},
pages = {24--58},
title = {{A Transaction-Based Environment for System Modeling and Parallel Simulation}},
url = {http://link.springer.com/10.1007/s10766-013-0303-4},
volume = {43},
year = {2015}
}

@article{Edwards1997,
abstract = {This paper addresses the design of reactive real-time embedded$\backslash$nsystems. Such systems are often heterogeneous in implementation$\backslash$ntechnologies and design styles, for example by combining hardware$\backslash$napplication-specific integrated circuits (ASICs) with embedded software.$\backslash$nThe concurrent design process for such embedded systems involves solving$\backslash$nthe specification, validation, and synthesis problems. We review the$\backslash$nvariety of approaches to these problems that have been taken},
author = {Edwards, S. and Lavagno, L. and Lee, E.a. and Sangiovanni-Vincentelli, A.},
doi = {10.1109/5.558710},
file = {:home/kostis/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Edwards et al. - 1997 - Design of embedded systems formal models, validation, and synthesis.pdf:pdf},
isbn = {3966880792},
issn = {00189219},
journal = {Proceedings of the IEEE},
mendeley-groups = {Thesis},
month = {mar},
number = {3},
pages = {366--390},
title = {{Design of embedded systems: formal models, validation, and synthesis}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=558710},
volume = {85},
year = {1997}
}

@book{Editor2014,
editor = {Claudius Ptolemaeus},
title  = {System Design, Modeling, and Simulation using Ptolemy II},
publisher = {Ptolemy.org},
year = {2014},
URL = {http://ptolemy.org/books/Systems}
} 

@article{Jantsch2005,
abstract = {We organize Models of Computation (MoC) with respect to their time abstrac- tion. We distinguish between continuous time, discrete time, synchronous and untimed MoCs. System level models serve a variety of objectives with partially contradicting requirements. Consequently, different MoCs are necessary for the various tasks and phases in the design of an embedded system. We trace the impact of MoCs on the efficiency of several design activities for synthesis, verification and simulation.},
author = {Jantsch, Axel and Sander, Ingo},
file = {:home/kostis/bBibliography/SystemC/Models{\_}of{\_}Computation{\_}in{\_}the{\_}Design{\_}Process.pdf:pdf},
mendeley-groups = {Thesis},
title = {{Models of computation in the design process}},
url = {http://people.kth.se/~ingo/Papers/IEE2005-Book.pdf},
year = {2005}
}

@article{Fujimoto1990,
abstract = {Parallel discrete event simulation (PDES), sometimes called distributed simulation, refers to the execution of a single discrete event simulation program on a parallel computer. PDES has attracted a considerable amount of interest in recent years. From a pragmatic standpoint, this interest arises from the fact that large simulations in engineering, computer science, economics, and military applications, to mention a few, consume enormous amounts of time on sequential machines. From an academic point of view, parallel simulation is interesting because it represents a problem domain that often contains substantial amounts of parallelism (e.g., see [59]), yet paradoxically, is surprisingly difficult to parallelize in practice. A sufficiently general solution to the PDES problem may lead to new insights in parallel computation as a whole. Historically, the irregular, data-dependent nature of PDES programs has identified it as an application where vectorization techniques using supercomputer hardware provide little benefit [14].A discrete event simulation model assumes the system being simulated only changes state at discrete points in simulated time. The simulation model jumps from one state to another upon the occurrence of an event. For example, a simulator of a store-and-forward communication network might include state variables to indicate the length of message queues, the status of communication links (busy or idle), etc. Typical events might include arrival of a message at some node in the network, forwarding a message to another network node, component failures, etc.We are especially concerned with the simulation of asynchronous systems where events are not synchronized by a global clock, but rather, occur at irregular time intervals. For these systems, few simulator events occur at any single point in simulated time; therefore parallelization techniques based on lock-step execution using a global simulation clock perform poorly or require assumptions in the timing model that may compromise the fidelity of the simulation. Concurrent execution of events at different points in simulated time is required, but as we shall soon see, this introduces interesting synchronization problems that are at the heart of the PDES problem.This article deals with the execution of a simulation program on a parallel computer by decomposing the simulation application into a set of concurrently executing processes. For completeness, we conclude this section by mentioning other approaches to exploiting parallelism in simulation problems.Comfort and Shepard et al. have proposed using dedicated functional units to implement specific sequential simulation functions, (e.g., event list manipulation and random number generation [20, 23, 47]). This method can provide only a limited amount of speedup, however. Zhang, Zeigler, and Concepcion use the hierarchical decomposition of the simulation model to allow an event consisting of several subevents to be processed concurrently [21, 98]. A third alternative is to execute independent, sequential simulation programs on different processors [11, 39]. This replicated trials approach is useful if the simulation is largely stochastic and one is performing long simulation runs to reduce variance, or if one is attempting to simulate a specific simulation problem across a large number of different parameter settings. However, one drawback with this approach is that each processor must contain sufficient memory to hold the entire simulation. Furthermore, this approach is less suitable in a design environment where results of one experiment are used to determine the experiment that should be performed next because one must wait for a sequential execution to be completed before results are obtained.},
author = {Fujimoto, Richard M.},
doi = {10.1145/84537.84545},
file = {:home/kostis/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Fujimoto - 1990 - Parallel discrete event simulation.pdf:pdf},
isbn = {076951104X},
issn = {00010782},
journal = {Communications of the ACM},
mendeley-groups = {Thesis},
month = {oct},
number = {10},
pages = {30--53},
title = {{Parallel discrete event simulation}},
url = {http://portal.acm.org/citation.cfm?doid=84537.84545},
volume = {33},
year = {1990}
}

@book{Black2010,
address = {Boston, MA},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Black, David C. and Donovan, Jack and Bunton, Bill and Keist, Anna},
doi = {10.1007/978-0-387-69958-5},
edition = {2},
eprint = {arXiv:1011.1669v3},
file = {:home/kostis/xDocuments/systec from the ground up.pdf:pdf},
isbn = {978-0-387-69957-8},
mendeley-groups = {Thesis},
number = {1},
publisher = {Springer US},
title = {{SystemC: From the Ground Up}},
url = {http://link.springer.com/10.1007/978-0-387-69958-5},
year = {2010}
}

@inproceedings{Schumacher2010,
address = {New York, USA},
author = {Schumacher, Christoph and Leupers, Rainer and Petras, Dietmar and Hoffmann, Andreas},
booktitle = {Proceedings of the eighth IEEE/ACM/IFIP international conference on Hardware/software codesign and system synthesis - CODES/ISSS '10},
doi = {10.1145/1878961.1879005},
file = {:home/kostis/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Schumacher et al. - 2010 - parSC.pdf:pdf},
isbn = {9781605589053},
keywords = {conservative,parallel simulation,systemc,tightly-coupled},
mendeley-groups = {Thesis,Thesis/Further Examination Needed},
pages = {241},
publisher = {ACM Press},
title = {{parSC: Synchronous Parallel SystemC Simulation on Multi-Core Host Architectures}},
url = {http://dl.acm.org/citation.cfm?id=1878961.1879005},
year = {2010}
}

@inproceedings{Domer2011,
author = {Domer, Rainer and Chen, Weiwei and Han, Xu and Gerstlauer, Andreas},
booktitle = {16th Asia and South Pacific Design Automation Conference (ASP-DAC 2011)},
doi = {10.1109/ASPDAC.2011.5722205},
file = {:home/kostis/bBibliography/SystemC/Multi-Core{\_}Parallel{\_}Simulation{\_}of{\_}System-Level{\_}Description{\_}Languages.pdf:pdf},
isbn = {978-1-4244-7515-5},
mendeley-groups = {Thesis,Thesis/Further Examination Needed},
month = {jan},
pages = {311--316},
publisher = {IEEE},
title = {{Multi-core parallel simulation of System-level Description Languages}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5722205},
year = {2011}
}


@inproceedings{Mello2010,
abstract = {The simulation speed is a key issue in virtual prototyping of Multi-Processors System on Chip (MPSoCs). The SystemC TLM2.0 (Transaction Level Modeling) approach accelerates the simulation by using Interface Method Calls (IMC) to implement the communications between hardware components. Another source of speedup can be exploited by parallel simulation. Multi-core workstations are becoming the mainstream, and SMP workstations will soon contain several tens of cores. The standard SystemC simulation engine uses a centralized scheduler, that is clearly the bottleneck for a parallel simulation. This paper has two main contributions. The first is a general modeling strategy for shared memory MPSoCs, called TLM-DT (Transaction Level Modeling with Distributed Time). The second is a truly parallel simulation engine, called SystemC-SMP. First experimental results on a 40 processor MPSoC virtual prototype running on a dual-core workstation demonstrate a 1.8 speedup, versus a sequential simulation.},
author = {Mello, Aline and Maia, Isaac and Greiner, Alain and Pecheux, Francois},
booktitle = {2010 Design, Automation {\&} Test in Europe Conference {\&} Exhibition (DATE 2010)},
doi = {10.1109/DATE.2010.5457136},
file = {:home/kostis/bBibliography/SystemC/Parallel{\_}Simulation{\_}of{\_}SystemC{\_}TLM{\_}2.0{\_}Compliant{\_}MPSoC{\_}on{\_}SMP{\_}Workstations.pdf:pdf},
isbn = {978-3-9810801-6-2},
issn = {1530-1591},
keywords = {Acceleration,Discrete event simulation,Hardware,Kernel,MPSoC,Parallel Simulation,Power system modeling,SMP workstations,System-on-a-chip,SystemC,SystemC TLM 2.0,SystemC simulation engine,TLM-DT,Virtual prototyping,Workstations,digital simulation,distributed time,interface method calls,multicore workstations,multiprocessing systems,multiprocessors system on chip,parallel simulation,system-on-chip,transaction level modeling,virtual prototyping},
mendeley-groups = {Thesis,Thesis/Further Examination Needed},
month = {mar},
pages = {606--609},
publisher = {IEEE},
title = {{Parallel simulation of systemC TLM 2.0 compliant MPSoC on SMP workstations}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5457136},
year = {2010}
}

@book{Chen2015,
address = {Cham},
author = {Chen, Weiwei},
doi = {10.1007/978-3-319-08753-5},
file = {:home/kostis/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Chen - 2015 - Out-of-order Parallel Discrete Event Simulation for Electronic System-level Design.pdf:pdf},
isbn = {978-3-319-08752-8},
mendeley-groups = {Thesis,Thesis/Further Examination Needed},
publisher = {Springer International Publishing},
title = {{Out-of-order Parallel Discrete Event Simulation for Electronic System-level Design}},
url = {http://link.springer.com/10.1007/978-3-319-08753-5},
year = {2015}
}

@inproceedings{Fujimoto2015,
author = {Fujimoto, Richard M.},
booktitle = {Proceedings of the 2015 Winter Simulation Conference},
file = {:home/kostis/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Fujimoto - 2015 - Parallel and Distributed Simulation.pdf:pdf},
isbn = {978-1-4673-9743-8/15},
keywords = {icle},
mendeley-groups = {Thesis},
title = {{Parallel and Distributed Simulation}},
url = {http://www.informs-sim.org/wsc15papers/004.pdf},
year = {2015}
}

@article{Hosein2012,
abstract = {Electronic System Level (ESL) design of embedded systems proposes raising the abstraction level of the design entry to cope with the increasing complexity of such systems. To ex- ploit the benefits of ESL, design languages should allowspec- ification of models which are a) heterogeneous, to describe different aspects of systems; b) formally defined, for applica- tion of analysis and synthesis methods; c) executable, to en- able early detection of specification; and d) parallel, to exploit the multi- and many-core platforms for simulation and imple- mentation. We present a modeling library on top of SystemC, targeting heterogeneous embedded system design, based on four models of computation. The library has a formal basis where all elements are well defined and lead in construction of analyzable models. The semantics of communication and computation are implemented by the library, which allows the designer to focus on specifying the pure functional aspects. A key advantage is that the formalism is used to export the structure and behavior of the models via introspection as an abstract representation for further analysis and synthesis. Keywords: Modeling, Simulation, System-level design, Computer aided engineering, Formal specification},
author = {Hosein, Seyed and Niaki, Attarzadeh and Jakobsen, Mikkel Koefoed and Sulonen, Tero and Sander, Ingo and Oy, Da-design},
file = {:home/kostis/bBibliography/Formal{\_}Heterogeneous{\_}System{\_}Modeling{\_}with{\_}SystemC.pdf:pdf},
isbn = {9782953050455},
issn = {16369874},
journal = {Forum on Specification and Design Languages (FDL). IEEE},
keywords = {computer aided engineering,formal specifications,modeling,simulation,system-level design},
mendeley-groups = {Thesis},
pages = {160--167},
title = {{Formal Heterogeneous System Modeling with SystemC}},
url = {http://kth.diva-portal.org/smash/record.jsf?pid=diva2%3A586216&dswid=-7079},
year = {2012}
}


@book{Fujimoto1999,
abstract = {A state-of-the-art guide for the implementation of distributed simulation technology. The rapid expansion of the Internet and commodity parallel computers has made parallel and distributed simulation (PADS) a hot technology indeed. Applications abound not only in the analysis of complex systems such as transportation or the next-generation Internet, but also in computer-generated virtual worlds for military and professional training, interactive computer games, and the entertainment industry. In this book, PADS expert Richard M. Fujimoto provides software developers with cutting-edge techniques for speeding up the execution of simulations across multiple processors and dealing with data distribution over wide area networks ,including the Internet. With an emphasis on parallel and distributed discrete event simulation technologies, Dr. Fujimoto compiles and consolidates research results in the field spanning the last twenty years, discussing the use of parallel and distributed computers in both the modeling and analysis of system behavior and the creation of distributed virtual environments. While other books on PADS concentrate on applications, Parallel and Distributed Simulation Systems clearly shows how to implement the technology. It explains in detail the synchronization algorithms needed to properly realize the simulations, including an in-depth discussion of time warp and advanced optimistic techniques. Finally, the book is richly supplemented with references, tables and illustrations, and examples of contemporary systems such as the Department of Defense's High Level Architecture (HLA), which has become the standard architecture for defense programs in the United States.},
address = {New York, NY, USA},
author = {Fujimoto, Richard M.},
edition = {1st},
file = {:home/kostis/bBibliography/Parallel{\_}and{\_}Distributed{\_}Simulation{\_}Systems.pdf:pdf},
isbn = {978-0-471-18383-9},
mendeley-groups = {Thesis},
pages = {320},
publisher = {John Wiley {\&} Sons, Inc.},
title = {{Parallel and Distributed Simulation Systems}},
year = {1999}
}

@techreport{Bryant,
 author = {Bryant, R. E.},
 title = {SIMULATION OF PACKET COMMUNICATION ARCHITECTURE COMPUTER SYSTEMS},
 year = {1977},
 source = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Amitai%3AMIT-LCS%2F%2FMIT%2FLCS%2FTR-188},
 publisher = {Massachusetts Institute of Technology},
 address = {Cambridge, MA, USA},
 url = {http://dl.acm.org/citation.cfm?id=889797}
}

@article{Chandy1979,
abstract = {The problem of system simulation is typically solved in a sequential manner due to the wide and intensive sharing of variables by all parts of the system. We propose a distributed solution where processes communicate only through messages with their neighbors; there are no shared variables and there is no central process for message routing or process scheduling. Deadlock is avoided in this system despite the absence of global control. Each process in the solution requires only a limited amount of memory. The correctness of a distributed system is proven by proving the correctness of each of its component processes and then using inductive arguments. The proposed solution has been empirically found to be efficient in preliminary studies. The paper presents formal, detailed proofs of correctness.},
author = {Chandy, K.M. and Misra, J.},
doi = {10.1109/TSE.1979.230182},
file = {:home/kostis/bBibliography/Distributed{\_}Simulation{\_}A{\_}Case{\_}Study{\_}in{\_}Design{\_}and{\_}Verification{\_}of{\_}Distributed{\_}Programs.pdf:pdf},
issn = {0098-5589},
journal = {IEEE Transactions on Software Engineering},
keywords = {Concurrent processes,distributed systems,performance,program proving,simulation},
mendeley-groups = {Thesis},
month = {sep},
number = {5},
pages = {440--452},
title = {{Distributed Simulation: A Case Study in Design and Verification of Distributed Programs}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1702653},
volume = {SE-5},
year = {1979}
}

@book{Leupers2010,
address = {Boston, MA},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
doi = {10.1007/978-1-4419-6175-4},
editor = {Leupers, Rainer and Temam, Olivier},
eprint = {arXiv:1011.1669v3},
file = {:C$\backslash$:/Users/ksotirop/Documents/Bibliography/Processor{\_}and{\_}System-on-Chip{\_}Simulation.pdf:pdf},
isbn = {978-1-4419-6174-7},
issn = {1098-6596},
mendeley-groups = {TLM 2.0},
pmid = {25246403},
publisher = {Springer US},
title = {{Processor and System-on-Chip Simulation}},
url = {http://link.springer.com/10.1007/978-1-4419-6175-4},
year = {2010}
}

@article{Gajski1983,
author = {Gajski and Kuhn},
doi = {10.1109/MC.1983.1654264},
file = {:C$\backslash$:/Users/ksotirop/Documents/Bibliography/New{\_}VLSI{\_}Tools.pdf:pdf},
issn = {0018-9162},
journal = {Computer},
mendeley-groups = {Thesis},
month = {dec},
number = {12},
pages = {11--14},
title = {{Guest Editors' Introduction: New VLSI Tools}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1654264},
volume = {16},
year = {1983}
}

@book{Gajski2009,
address = {Boston, MA},
author = {Gajski, Daniel D. and Abdi, Samar and Gerstlauer, Andreas and Schirner, Gunar},
doi = {10.1007/978-1-4419-0504-8},
file = {:C$\backslash$:/Users/ksotirop/Documents/Bibliography/Embedded{\_}System{\_}Design.pdf:pdf},
isbn = {978-1-4419-0503-1},
issn = {16717104},
keywords = {- profiling,design space exploration,embedded hardware,scheduling,software systems},
mendeley-groups = {Electronic Systems Design},
pages = {94--101},
pmid = {21553537},
publisher = {Springer US},
title = {{Embedded System Design}},
url = {http://link.springer.com/10.1007/978-1-4419-0504-8},
year = {2009}
}


@book{Rigo2011,
address = {Dordrecht},
doi = {10.1007/978-1-4020-9940-3},
editor = {Rigo, Sandro and Azevedo, Rodolfo and Santos, Luiz},
isbn = {978-1-4020-9939-7},
mendeley-groups = {Electronic Systems Design},
publisher = {Springer Netherlands},
title = {{Electronic System Level Design}},
url = {http://link.springer.com/10.1007/978-1-4020-9940-3},
year = {2011}
}

@book{MessagePassingInterfaceForum2012,
address = {Knoxville, Tenessee},
author = {{Message Passing Interface Forum}},
file = {:C$\backslash$:/Users/ksotirop/Documents/Bibliography/MPI{\_}A{\_}Message-Passing{\_}Inteface{\_}Standard.pdf:pdf},
mendeley-groups = {MPI,MPI/MPI Forum},
publisher = {University of Tenessee},
title = {{MPI: A Message Passing Interface Standard Version 3.0}},
url = {http://www.mpi-forum.org/docs/mpi-3.0/mpi30-report.pdf},
year = {2012}
}

@techreport{Liu2015,
address = {Irvine CA USA},
author = {Liu, Guantao and Schmidt, Tim and Rainer, D and Liu, Guantao and Schmidt, Tim and Rainer, D},
file = {:C$\backslash$:/Users/ksotirop/Documents/Bibliography/RISC{\_}Compiler{\_}and{\_}Simulator{\_}Alpha{\_}Release{\_}V0.2.1{\_}Out{\_}of{\_}Order{\_}Parallel{\_}Simulatable{\_}SystemC{\_}Subset.pdf:pdf},
institution = {Center for Embedded and Cyber-physical Systems University of California, Irvine},
mendeley-groups = {Thesis},
number = {949},
title = {{RISC Compiler and Simulator , Alpha Release V0 . 2 . 1 : Out-of-Order Parallel Simulatable SystemC Subset}},
url = {http://www.cecs.uci.edu/{~}doemer/publications/CECS{\_}TR{\_}15{\_}02.pdf},
volume = {1},
year = {2015}
}

@book{Bailey2010,
address = {Boston, MA},
author = {Bailey, Brian and Martin, Grant},
doi = {10.1007/978-1-4419-0965-7},
file = {:C$\backslash$:/Users/ksotirop/Documents/Bibliography/ESL{\_}Models{\_}and{\_}their{\_}Application.pdf:pdf},
isbn = {978-1-4419-0964-0},
mendeley-groups = {Electronic Systems Design},
publisher = {Springer US},
title = {{ESL Models and their Application}},
url = {http://link.springer.com/10.1007/978-1-4419-0965-7},
year = {2010}
}

@article{Hakansson2013,
abstract = {Research methods and methodologies are extremely important when conducting research and degree projects. The use and application of the methods and methodologies are considered to be ânecessarily viciousâ and, unfortunately, often applied after the research has been conducted. The need for applying methods before the actually research and the reasons for doing so are often stressed in the literature and courses for research and scientific writing. This includes the aspects of selecting, understanding and applying research methods for a selected project. Unfortunately, it is difficult to choose well-suited methods and too often the selected methods and methodologies do not match each other. Instead, methods are applied without knowing about the consequences the applied method have both on the other chosen methods and on the results of the work or research. This paper provides a portal of research methods and methodologies to help the students to choose and apply the most suitable methods by illustrating which methods belong together and the distinctions between the different methods.},
author = {H{\aa}kansson, Anne},
file = {:home/konstantinos/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/H{\aa}kansson - 2013 - Portal of Research Methods and Methodologies for Research Projects and Degree Projects.pdf:pdf},
journal = {International Conference on Frontiers in Education: Computer Science and Computer Engineering},
keywords = {and method education,capstone projects,methodologies,projects,research,research methods},
mendeley-groups = {Thesis},
pages = {67--73},
title = {{Portal of Research Methods and Methodologies for Research Projects and Degree Projects}},
url = {http://kth.diva-portal.org/smash/record.jsf?pid=diva2%3A677684&dswid=9928},
volume = {13},
year = {2013}
}

@mastersthesis{Runaker2015,
author = {Run{\aa}ker, Bjorn},
file = {:home/konstantinos/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Run{\aa}ker - 2015 - Distributed system simulation with host-based target offloading.pdf:pdf},
mendeley-groups = {Thesis},
school = {KTH Royal Institue of Technology},
title = {{Distributed system simulation with host-based target offloading}},
url = {http://kth.diva-portal.org/smash/record.jsf?dswid=-9606&pid=diva2%3A807591&c=1&searchType=SIMPLE&language=en&query=run%C3%A5ker&af=%5B%5D&aq=%5B%5B%5D%5D&aq2=%5B%5B%5D%5D&aqe=%5B%5D&noOfRows=50&sortOrder=author_sort_asc&onlyFullText=false&sf=allo}
year = {2015}
}

@misc{Surowiecki2013,
address = {New York, NY, USA},
author = {Surowiecki, James},
booktitle = {The New Yorker},
mendeley-groups = {Thesis},
month = {sep},
title = {{Where Nokia Went Wrong}},
url = {http://www.newyorker.com/business/currency/where-nokia-went-wrong},
year = {2013}
}

@article{Lamport1978,
author = {Lamport, Leslie},
doi = {10.1145/359545.359563},
file = {:home/konstantinos/Documents/bibliography/Time, Clocks, and the Ordering of Events in a Distributed System.pdf:pdf},
journal = {Communications of the ACM},
keywords = {clock synchronization,computer networks,distributed systems,multiprocess systems},
mendeley-groups = {MoC,Thesis},
number = {7},
title = {{Time, Clocks, and the Ordering of Events in a Distributed System}},
url = {http://dl.acm.org.focus.lib.kth.se/citation.cfm?doid=359545.359563},
volume = {21},
year = {1978}
}


@article{Schulte2011,
abstract = {Org-mode is a simple, plain-text markup language for hierarchical documents that allows the intermingling of data, code, and prose.},
author = {Schulte, Eric and Davison, Dan},
doi = {10.1109/MCSE.2011.41},
issn = {15219615},
journal = {Computing in Science and Engineering},
keywords = {Programming languages,online tools,reproducible research,scientific computing},
number = {3},
pages = {66--73},
title = {{Active documents with org-mode}},
volume = {13},
year = {2011}
}

@book{Furia2010,
abstract = {The increasing relevance of areas such as real-time and embedded systems, pervasive computing, hybrid systems control, and biological and social systems modeling is bringing a growing attention to the tempo- ral aspects of computing, not only in the computer science domain, but also in more traditional fields of engineering. This article surveys various approaches to the formal modeling and analysis of the temporal features of computer-based systems, with a level of detail that is also suitable for nonspecialists. In doing so, it provides a unifying framework, rather than just a comprehensive list of formalisms. The article first lays out some key dimensions along which the various formalisms can be evaluated and compared. Then, a significant sample of formalisms for time modeling in computing are presented and discussed according to these dimensions. The adopted perspective is, to some extent, historical, going from traditional models and formalisms to more modern ones.},
archivePrefix = {arXiv},
arxivId = {0807.4132},
author = {Furia, Carlo a and Mandrioli, Dino and Morzenti, Angelo and Rossi, Matteo},
booktitle = {ACM Computing Surveys},
doi = {10.1145/1667062.1667063},
eprint = {0807.4132},
file = {:home/konstantinos/Documents/bibliography/Modeling Time in Computing.pdf:pdf},
isbn = {978-3-642-32331-7},
issn = {03600300},
mendeley-groups = {MoC},
number = {2},
pages = {1--59},
title = {{Modeling time in computing}},
url = {http://portal.acm.org/citation.cfm?doid=1667062.1667063},
volume = {42},
year = {2010}
}

@book{Stepanov2014,
 author = {Stepanov, Alexander A. and Rose, Daniel E.},
 title = {From Mathematics to Generic Programming},
 year = {2014},
 isbn = {0321942043, 9780321942043},
 edition = {1st},
 publisher = {Addison-Wesley Professional},
} 


@book{Tanenbaum1998,
author = {Tanenbaum, AS},
edition = {4th},
file = {:home/konstantinos/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Tanenbaum - 1998 - Structured computer organization.pdf:pdf},
isbn = {0138544239},
publisher = {Prentice Hall},
title = {{Structured computer organization}},
url = {http://dl.acm.org/citation.cfm?id=538160},
year = {1998}
}

@book{May2009,
author = {May, David},
file = {:home/konstantinos/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/May - 2009 - The XMOS XS1 Architecture.pdf:pdf},
isbn = {9781907361012},
mendeley-groups = {XMOS,XMOS/XS1 Architecture},
publisher = {XMOS},
title = {{The XMOS XS1 Architecture}},
url = {https://www.xmos.com/zh/download/public/The-XMOS-XS1-Architecture(1.0).pdf},
year = {2009}
}

@book{Ecker2009,
author = {Ecker, Wolfgang and M{\"{u}}ller, Wolfgang and D{\"{o}}mer, Rainer},
booktitle = {Hardware-dependent Software: Principles and Practice},
doi = {10.1007/978-1-4020-9436-1_1},
file = {:home/konstantinos/Documents/bibliography/Hardware-dependent Software Principles and Practice.pdf:pdf},
isbn = {9781402094354},
keywords = {Hardware-dependent Software,Productivity Gap,Systems Complexity},
mendeley-groups = {Thesis},
pages = {1--13},
title = {{Hardware-dependent software introduction and overview}},
year = {2009}
}


@book{Hennessy2011,
author = {Hennessy, John L. and Patterson, David a.},
edition = {Fifth},
file = {:home/konstantinos/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Hennessy, Patterson - 2011 - Computer Architecture A Quantitative Approach.pdf:pdf},
isbn = {9780123838728},
mendeley-groups = {Architecture},
pages = {857},
title = {{Computer Architecture: A Quantitative Approach}},
year = {2011}
}



